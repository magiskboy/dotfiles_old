#!/usr/bin/env zsh

export ZSH="$HOME/.oh-my-zsh"

ZSH_THEME="nkthanh"

plugins=(
  git
  git-prompt
  git-auto-fetch
  gitignore
  pipenv
  pyenv
  django
  golang
  virtualenv
  mvn
  docker
  kubectl
  vi-mode
  jsontools
  zsh-autosuggestions
  zsh-syntax-highlighting
)

source $ZSH/oh-my-zsh.sh

alias genssl="openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout cert.key -out cert.crt"
alias -s {yml,yaml,ts,jsx,html,txt,c,cpp,java,go,md,json,Dockerfile,gitignore,dockerignore,zsh}=nvim
alias reload="exec \"$SHELL\""
alias md="mkdir"
alias rmwp="find . -type f -name '*.py' -exec sed -i '' 's/[[:space:]]\{1,\}$//' {} \+"
alias f="fzf --preview=\"bat {} --color=always --theme='Monokai Extended Origin'\""
alias gh="git rev-parse --short HEAD"
alias themes="bash -c  \"$(wget -qO- https://git.io/vQgMr)\""
alias fd="fdfind"
alias use_pyenv="eval \"$(pyenv init -)\""

autoload -Uz compinit

function search() {
    k="$@"
    files=$(rg -l $k)
    [ ! -z $files ] && fzf --preview "bat {} --color=always" --bind "enter:execute(nvim {})" <<< $files
}

function runtest() {
    branch=$1
    submit=$2
    for file in $(rg -l "SC-$branch"); do
        if [[ ! -z $submit ]]; then
            pytest $file --submit
        else
            pytest $file
        fi
    done
}

function _fzf_compgen_path() {
  fd --hidden --follow --exclude ".git" . "$1"
}

function _fzf_compgen_dir() {
  fd --type d --hidden --follow --exclude ".git" . "$1"
}

function _fzf_comprun() {
  local command=$1
  shift

  case "$command" in
    cd)           fzf "$@" --preview 'tree -C {}' ;;
    export|unset) fzf "$@" --preview "eval 'echo \$'{}" ;;
    ssh)          fzf "$@" --preview 'dig {}' ;;
    *)            fzf "$@" ;;
  esac
}
